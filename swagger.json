{
  "openapi": "3.0.0",
  "info": {
    "title": "C-REST Todo API",
    "description": "API documentation for a simple Todo API built in C",
    "version": "1.0.0"
  },
  "paths": {
    "/api/todos": {
      "get": {
        "summary": "Retrieve todos",
        "description": "Get a list of todos",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": 1,
                    "title": "Todo 1",
                    "description": "Description for Todo 1"
                  },
                  {
                    "id": 2,
                    "title": "Todo 2",
                    "description": "Description for Todo 2"
                  }
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a todo",
        "description": "Create a new todo",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InputCreateTodo"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Todo created"
          }
        }
      }
    },
    "/api/todos/{id}": {
      "get": {
        "summary": "Get a todo by ID",
        "description": "Get a specific todo by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "ID of the todo to retrieve"
          }
        ],
        "responses": {
          "200": {
            "description": "Todo found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Todo"
                }
              }
            }
          },
          "404": {
            "description": "Todo not found"
          }
        }
      },
      "put": {
        "summary": "Update a todo by ID",
        "description": "Update an existing todo by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "ID of the todo to update"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InputUpdateTodo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Todo updated"
          }
        }
      },
      "delete": {
        "summary": "Delete a todo by ID",
        "description": "Delete an existing todo by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "ID of the todo to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Todo deleted"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Todo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "completed": {
            "type": "boolean"
          }
        }
      },
      "InputCreateTodo": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          }
        }
      },
      "InputUpdateTodo": {
        "type": "object",
        "properties": {
          "completed": {
            "type": "boolean"
          }
        }
      }
    }
  }
}
